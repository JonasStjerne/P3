@page "/login"
@using Food_Like.Shared
@inject NavigationManager NavManager
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStore

<style>

    .form-signin {
        width: 100%;
        max-width: 330px;
        padding: 15px;
        margin: auto;
    }

        .form-signin .form-control {
            position: relative;
            box-sizing: border-box;
            height: auto;
            padding: 10px;
            font-size: 16px;
        }

            .form-signin .form-control:focus {
                z-index: 2;
            }

        .form-signin input[type="email"] {
            margin-bottom: -1px;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        .form-signin input[type="password"] {
            margin-bottom: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
</style>
<form class="form-signin">
    <label for="inputEmail" class="sr-only">Email address</label>
    <input type="email" id="inputEmail" class="form-control mb-2" placeholder="Email address" @bind="email" required autofocus>
    <label for="inputPassword" class="sr-only">Password</label>
    <input type="password" id="inputPassword" class="form-control" placeholder="Password" @bind="password" required>
    <button type="button" class="mt-4 btn btn-lg btn-primary btn-block" @onclick="submitLogin">Login</button>
    <p class="text-center"><NavLink href="#">Forgot</NavLink></p>
</form>
@if (errorMessage.Length > 0)
{
    <div class="alert alert-danger d-flex justify-content-center" role="alert">
        <p>@errorMessage</p>
    </div>
}


@code {
    private string email { get; set; }
    private string password { get; set; }
    private string errorMessage = "";

    protected async override void OnInitialized()
    {
        var token = await localStore.GetItemAsync<string>("credentials");
        if (token != null)
        {
            NavManager.NavigateTo("/home");
        }
    }

    private async void submitLogin()
    {
        errorMessage = "";
        var req = new LoginRequest
        {
            Email = email,
            EncryptedPassword = password
        };

        using var response = await Http.PostAsJsonAsync("api/auth/login", req);
        var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
        if (result.Sucess == true)
        {
            await localStore.SetItemAsync("credentials", result.Token);
            NavManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Wrong password or email";
            StateHasChanged();
        }

    }

}

@* Bootstrap 12/11 21 https://getbootstrap.com/docs/4.5/examples/ *@
