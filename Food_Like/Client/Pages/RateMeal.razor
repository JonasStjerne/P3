@page "/rate/{mealId:int}"
@using Food_Like.Shared
@inject NavigationManager NavManager
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStore


<style>

    .form-signin {
        width: 100%;
        max-width: 330px;
        padding: 15px;
        margin: auto;
    }

        .form-signin .form-control {
            position: relative;
            box-sizing: border-box;
            height: auto;
            padding: 10px;
            font-size: 16px;
        }

        .form-signin .form-control:focus {
            z-index: 2;
        }

        .form-signin input {
            margin-bottom: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
</style>
<form class="form-signin">
    <label for="stars">How many stars would you give this meal? (0-5)</label>
    @*<img src="assets/Star.png"/>*@
    <input id="stars" type="number" class="form-control mb-2" min="0" max="5" @bind="stars" required>

    <textarea type="text" class="form-control mb-2" rows="10" @bind="comment" required>Comment</textarea>

    <button type="button" class="mt-4 btn btn-lg btn-primary btn-block" @onclick="submitReview">Submit review</button>
</form>
@if (errorMessage.Length > 0)
{
    <div class="alert alert-danger" role="alert">
        <p>@errorMessage</p>
    </div>
}


@code {
    [Parameter]
    public int mealId { get; set; }

    private string token { get; set; }

    private sbyte stars;
    private string comment;



    private string errorMessage = "";

    protected async override void OnInitialized()
    {
        token = await localStore.GetItemAsync<string>("credentials");
    }

    private async void submitReview()
    {
        errorMessage = "";
        Review data = new Review()
        {
            MealId = mealId,
            Rating = stars,
            ReviewDescription = comment

        };

        Auth<Review> authRequest = new Auth<Review>(token)
        {
            Request = data,
        };

        using var response = await Http.PostAsJsonAsync("api/meal/review/" + mealId.ToString(), authRequest);
        if (response.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("/home");
        }
        else
        {
            errorMessage = "Something went wrong";
            StateHasChanged();
        }
    }

}

@* Bootstrap 12/11 21 https://getbootstrap.com/docs/4.5/examples/ *@
