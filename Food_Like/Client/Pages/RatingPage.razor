@page "/rating/{sellerId:int}"
@layout BlankLayout
@inject HttpClient Http
@using Food_Like.Shared;
@inject IJSRuntime JS

<style>
    .back {
        position: absolute;
        left: 20px;
        top: 19px;
        z-index: 10;
    }

    .comments {
        background-color: #fff;
        padding: 5px;
        margin: 10px
    }

    .kitchenimg {
        width: 100%;
        height: 212px;
    }

    .sellerpic {
        position: absolute;
        z-index: 15;
        top: 125px;
        width: 100%;
    }

    .centerimg {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
</style>

@if (seller != null)
{

    <div class="back">
        <a href="/home"> <img style=" height: 30px; width: 30px;" src="/assets/back.png" /> </a>
    </div>
    <div class="kitchenimg">
        <img src="@kitchenPic" />
    </div>

    <div class="container" style="margin-top: 10px; padding-left: 25px; padding-right: 25px;">
        <div class="row">
            <div class="col" style="text-align: left; padding-left: 5px;">
                <p><img src="/assets/adr.png" style="height:24px; width:24px;"> @seller.Address.City</p>
            </div>

            <div class="col" style="text-align: right; padding-right: 5px;">
                <p> @seller.SellerNavigation.FirstName </p>
            </div>
        </div>
    </div>

    <div class="sellerpic">
        <img class="centerimg" style="border-radius:100%; width: 118px; height: 118px" src="@sellerPic" />
    </div>


    <div align="center">
        <h2>@avgRating Star Seller </h2>
        <p> Out of @reviews.Count reviews</p>
    </div>
}
else
{
    <div>Loading data ...</div>
}


@if (reviews != null)
{
    <div class="px-4">

        <p><img src="/assets/comment.png" style="height:24px; width:24px;"> All comments (@reviews.Count)</p>
        @foreach (var review in reviews)
        {
            var base64 = Convert.ToBase64String(review.Buyer.ProfilePicture);
            var buyerPic = String.Format("data:image/jpg;base64,{0}", base64);

            <div class="row comments cardshadow">
                <div class="col-2">
                    <img style="height:29px; width:29px; border-radius:100%;" src="@buyerPic" />
                </div>
                <div class="col">
                    @review.ReviewDescription
                </div>
                <div class="col-4">
                    @review.Rating / 5
                    <img src="/assets/Star.png" style="height:24px; width:24px; margin-left: 5px;">
                </div>
            </div>

        }
    </div>


}
else
{
    <div>This seller has no reviews</div>
}




@code {

    [Parameter]
    public int sellerId { get; set; }

    private Seller seller;
    private List<Review> reviews;

    private decimal avgRating;

    private string sellerPic = "";
    private string kitchenPic = "";

    private string referer = "";

    protected async override Task OnInitializedAsync()
    {
        

        var response = await Http.GetAsync("api/user/" + sellerId.ToString() + "/ratings");
        if (response.IsSuccessStatusCode)
        {
            reviews = await response.Content.ReadFromJsonAsync<List<Review>>();

            int sum = 0;

            foreach (var review in reviews)
            {
                sum = sum + review.Rating;
            }

            avgRating = sum / reviews.Count;
        }

        response = await Http.GetAsync("api/user/" + sellerId.ToString());
        if (response.IsSuccessStatusCode)
        {
            seller = await response.Content.ReadFromJsonAsync<Seller>();

            var base64 = Convert.ToBase64String(seller.SellerNavigation.ProfilePicture);
            sellerPic = String.Format("data:image/jpg;base64,{0}", base64);

            base64 = Convert.ToBase64String(seller.KitchenPicture);
            kitchenPic = String.Format("data:image/jpg;base64,{0}", base64);

        }


    }

}
